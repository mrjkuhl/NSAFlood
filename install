#!/bin/bash

CURRENTDIR=$(pwd)
DESTINATIONBIN="/usr/local/bin/"
DESTINATIONMAN="/usr/share/man/man1/"
FILEBIN="nsaflood"
FILESCHED="nsaf-sched"
FILEMAN="nsaflood.1.gz"
FILEMANSRC="nsaflood.1"
FILESCHEDMAN="nsaf-sched.1.gz"
FILESCHEDMANSRC="nsaf-sched.1"
CONFIGDIR="/etc/nsaflood"
CONFIGFILE="nsaflood.conf"
CONFIGPEERTAB="peertab"
LOGDIR="/var/log/nsaflood"
NSAFLOODUSER="nsaflood"
NSAFLOODRNG=

if [ $UID != 0 ]; then

  echo "Only root can install programs.
Exiting..."

	exit 1
fi

echo -n "Moving $FILEBIN to $DESTINATIONBIN...				"

if cp $CURRENTDIR/$FILEBIN $DESTINATIONBIN
then
	echo -e "\E[32m[success!]\E[0m"
else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not copy $FILEBIN to $DESTINATIONBIN
This may be due to insufficient file permissions, or the partition being full.
Exiting..."

	exit 2
fi

echo -n "Updating file ownership and permissions on $FILEBIN...		"

if ! chown 0:0 $DESTINATIONBIN/$FILEBIN
then
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change ownership of $FILEMAN
The file might not exist
Exiting..."
	exit 2
fi

if chmod 755 $DESTINATIONBIN/$FILEBIN
then
	echo -e "\E[32m[success!]\E[0m"
else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change permissions of $FILEMAN
The file might not exist
Exiting..."
	exit 2
fi

echo -n "Moving $FILESCHED to $DESTINATIONBIN...				"

if cp $CURRENTDIR/$FILESCHED $DESTINATIONBIN
then
	echo -e "\E[32m[success!]\E[0m"
else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not copy $FILESCHED to $DESTINATOINBIN
This may be due to insufficent file permissions, or the partition being full.
Exiting..."
	exit 2
fi

echo -n "Updating file ownership and permissions on $FILESCHED...	"

if ! chown 0:0 $DESTINATIONBIN/$FILESCHED
then
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change ownership of $FILEMAN
The file might not exist
Exiting..."
	exit 2
fi

if chmod 755 $DESTINATIONBIN/$FILESCHED
then
	echo -e "\E[32m[success!]\E[0m"
else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change permissions of $FILEMAN
The file might not exist
Exiting..."
	exit 2
fi

echo -n "Compressing $FILEMANSRC and moving to $DESTINATIONMAN...	"

if gzip --stdout $CURRENTDIR/$FILEMANSRC > $DESTINATIONMAN/$FILEMAN
then
	echo -e "\E[32m[success!]\E[0m"
else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not copy $FILEMAN to $DESTINATIONMAN
This may be due to insuffiencet file permissions, or the partition being full.
Exiting..."
	exit 2
fi

echo -n "Updating file ownership and permissions of $FILEMAN...	"

if ! chown 0:0 $DESTINATIONMAN/$FILEMAN
then
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change ownership of $FILEMAN
The file might not exist
Exiting..."
	exit 2
fi

if chmod 744 $DESTINATIONMAN/$FILEMAN
then
	echo -e "\E[32m[success!]\E[0m"
else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change permissions of $FILEMAN
The file might not exist
Exiting..."
	exit 2
fi

echo -n "Compressing $FILESCHEDMANSRC and moving to $DESTINATIONMAN...	"

if gzip --stdout $CURRENTDIR/$FILESCHEDMANSRC > $DESTINATIONMAN/$FILESCHEDMAN
then
	echo -e "\E[32m[success!]\E[0m"
else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not copy $FILESCHEDMAN to $DESTINATIONMAN
This may be due to insufficient file permissions, or the partition being full.
Exiting..."
	exit 2
fi

echo -n "Updating file ownership and permissions of $FILESCHEDMAN...	"

if ! chown 0:0 $DESTINATIONMAN/$FILESCHEDMAN
then
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change ownership of $FILEMANSCHED
The file might not exist
Exiting..."
	exit 2
fi

if chmod 744 $DESTINATIONMAN/$FILESCHEDMAN
then
	echo -e "\E[32m[success!]\E[0m"
else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change permissions of $FILEMANSCHED
The file might not exist
Exiting..."
	exit 2
fi

echo -n "Creating $CONFIGDIR...					"

if ls $CONFIGDIR > /dev/null 2>&1
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if mkdir $CONFIGDIR > /dev/null 2>&1
	then
		echo -e "\E[32m[success!]\E[0m"
	else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not create directory $CONFIGDIR
This may be due to insufficient file permissions, or the directory exists.
Exiting..."
	exit 2
	fi
fi

echo -n "Creating configuration files...					"

if ! ls $CONFIGDIR/$CONFIGFILE > /dev/null 2>&1
then
	if ! cp $CONFIGFILE $CONFIGDIR/$CONFIGFILE
	then
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not create file $CONFIGFILE
This may be due to insufficient file permissions.
Exiting..."
		exit 2
	fi
fi

if ls $CONFIGDIR/$CONFIGPEERTAB > /dev/null 2>&1
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if touch $CONFIGDIR/$CONFIGPEERTAB
	then
		echo -e "\E[32m[success!]\E[0m"
	else
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not create file $CONFIGFILE
This may be due to insufficient file permissions.
Exiting..."
		exit 2
	fi
fi

echo -ne "Selecting system RNG device... "

if [ -c /dev/arandom ]
then
	NSAFLOODRNG=/dev/arandom
	echo -e "/dev/arandom			\E[32m[success!]\E[0m"
	echo "NSAFLOODRNG=$NSAFLOODRNG" >> $CONFIGDIR/$CONFIGFILE
elif [ -c /dev/urandom ]
then
	NSAFLOODRNG=/dev/urandom
	echo -e "/dev/urandom			\E[32m[success!]\E[0m"
	echo "NSAFLOODRNG=$NSAFLOODRNG" >> $CONFIGDIR/$CONFIGFILE
elif [ -c /dev/random ]
then
	NSAFLOODRNG=/dev/random
	echo -e "/dev/random			\E[32m[success!]\E[0m"
	echo "NSAFLOODRNG=$NSAFLOODRNG" >> $CONFIGDIR/$CONFIGFILE
else
	echo -e "				\E[31m[FAILURE!]\E[0m
ERROR: Could not find an RNG device
Exiting..."
		exit 2
fi

echo -n "Updating file ownership and permissions of $CONFIGFILE...	"

if ! ls $CONFIGDIR/$CONFIGFILE > /dev/null 2>&1
then
	if ! chown 0:0 $CONFIGDIR/$CONFIGFILE
	then
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change ownership of $FILEMANSCHED
The file might not exist
Exiting..."
		exit 2
	fi
fi

if ls $CONFIGDIR/$CONFIGFILE > /dev/null 2>&1
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if chmod 744 $CONFIGDIR/$CONFIGFILE
	then
		echo -e "\E[32m[success!]\E[0m"
	else
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not change permissions of $FILEMANSCHED
The file might not exist
Exiting..."
		exit 2
	fi
fi

echo -n "Creating $LOGDIR...					"

if ls $LOGDIR > /dev/null 2>&1
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if mkdir $LOGDIR > /dev/null 2>&1
	then
		echo -e "\E[32m[success!]\E[0m"
	else
	echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not create directory $CONFIGDIR
This may be due to insufficient file permissions, or the directory exists.
Exiting..."
	exit 2
	fi
fi

echo -n "Creating home directory for $NSAFLOODUSER...				"

if ls /home/$NSAFLOODUSER > /dev/null 2>&1
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if mkdir /home/$NSAFLOODUSER
	then
		echo -e "\E[32m[success!]\E[0m"
	else
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not create user home /home/$NSAFLOODUSER
Exiting..."
		exit 2
	fi
fi

echo -n "Creating $NSAFLOODUSER ssh configuration files			"

if ! ls /home/$NSAFLOODUSER/.ssh > /dev/null 2>&1
then
	if ! mkdir /home/$NSAFLOODUSER/.ssh
	then
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not create ssh config dir /home/$NSAFLOODUSER/.ssh
Exiting..."
		exit 2
	fi
fi

if ls /home/$NSAFLOODUSER/.ssh/authorized_keys > /dev/null 2>&1
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if touch /home/$NSAFLOODUSER/.ssh/authorized_keys
	then
		echo -e "\E[32m[success!]\E[0m"
	else
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not create user /home/$NSAFLOODUSER/.ssh/authorized_keys
Exiting..."
		exit 2
	fi
fi

echo -n "Creating nsaflood user $NSAFLOODUSER...				"
if groups $NSAFLOODUSER > /dev/null 2>&1
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if useradd -d /home/$NSAFLOODUSER $NSAFLOODUSER > /dev/null 2>&1
	then
		echo -e "\E[32m[success!]\E[0m"
	else
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could not create user $NSAFLOODUSER
Exiting..."
		exit 2
	fi
fi

echo -n "Updating ownership of /home/$NSAFLOODUSER...				"

if ls /home/$NSAFLOODUSER
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if chown -R $NSAFLOODUSER /home/$NSAFLOODUSER
	then
		echo -e "\E[32m[success!]\E[0m"
	else
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could change ownership of directory /home/$NSAFLOODUSER
This may be due to insufficient file permissions, or the directory does not exist.
Exiting..."
		exit 2
	fi
fi

echo -n "Updating ownership of $LOGDIR...			"

if ls $LOGDIR > /dev/null 2>&1
then
	echo -e "\E[33m[FOUND!]\E[0m"
else
	if chown $NSAFLOODUSER $LOGDIR
	then
		echo -e "\E[32m[success!]\E[0m"
	else
		echo -e "\E[31m[FAILURE!]\E[0m
ERROR: Could change ownership of directory $LOGDIR
This may be due to insufficient file permissions, or the directory does not exist.
Exiting..."
		exit 2
	fi
fi

echo "Installation of NSAFlood finished successfully."

exit 0
