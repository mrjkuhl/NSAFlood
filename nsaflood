#!/bin/bash
#  vim: set ts=2 sw=2 tw=0 et :
#
# Copyright 2014 Joel Cool-Panama <mr.jkuhl@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

VERSION="1.3.0"

function isArg {
	firstChar=$(echo "$1" | head -c 2)
	if [ "$firstChar" == "--" ]; then
		return 1
	fi

	firstChar=$(echo "$1" | head -c 1)
	if [ "$firstChar" == "-" ]; then
		return 2
	else
		return 3
	fi
}

function printVersion {
	echo -ne " NSAFlood $VERSION\n"\
	"Copyright 2014 Joel Cool-Panama <mr.jkuhl@gmail.com>\n"\
	"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\n"
}

BANDWIDTH="2048"
HOST=""
FILESIZE=1024
GARBAGEFILE=""
KEYFILE=""

TMP=""

while [ $1 ]; do
	isArg "$1"
	isArgReturn=$?
	if [ $isArgReturn -eq 1 ]; then
		if [ "$1" == "--host" ]; then
			HOST="$2"
			shift
		elif [ "$1" == "--file-size" ]; then
			TMP="$2"
			FILESIZE=$((FILESIZE * TMP))
			shift
		elif [ "$1" == "--bandwidth" ]; then
			BANDWIDTH="$2"
			shift
		elif [ "$1" == "--key-file" ]; then
			KEYFILE="$2"
			shift
		elif [ "$1" == "--version" ]; then
			printVersion
			exit 0
		else
			echo "No such argument exists"
			exit 3
		fi
	elif [ $isArgReturn -eq 2 ]; then
		if [ "$1" == "-ht" ]; then
			HOST="$2"
			shift
		elif [ "$1" == "-s" ]; then
			TMP="$2"
			FILESIZE=$((FILESIZE * TMP))
			shift
		elif [ "$1" == "-b" ]; then
			BANDWIDTH="$2"
			shift
		elif [ "$1" == "-k" ]; then
			KEYFILE="$2"
			shift
		elif [ "$1" == "-V" ]; then
			printVersion
			exit 0
		else 
			echo "No such argument exists"
			exit 3
		fi
	else
			echo ""
	fi
	shift
done

mkdir -p /tmp/nsaflood-$USER
GARBAGEFILE=$(mktemp --tmpdir=/tmp/nsaflood-$USER/ garbagefile.XXXXXXX)

echo -ne "\n Generating file...\n"

dd if=/dev/urandom of=$GARBAGEFILE bs=1k count=$FILESIZE 2> /dev/null

if [ $? -ne 0 ]; then
	echo -ne " FAILURE: File generation failed.\n"\
	"REASON: dd failed to read from /dev/urandom.\n"\
	"\nExiting\n"
	exit 1
fi

echo -ne " File generated!\n"\
"\nTransferring garbage file to $HOST\n\n"

if [ -z "$KEYFILE" ]; then
	scp -l $BANDWIDTH $GARBAGEFILE "$HOST:/dev/null"
else
	scp -l $BANDWIDTH -i $KEYFILE $GARBAGEFILE "$HOST:/dev/null"
fi

if [ $? -ne 0 ]; then
	echo -ne " FAILURE: File transfer failed.\n"\
	"REASON: scp failed to transfer the file.\n"\
	"\nExiting\n"
	exit 2
fi

rm $GARBAGEFILE

exit 0
